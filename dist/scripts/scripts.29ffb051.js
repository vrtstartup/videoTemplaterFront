"use strict";angular.module("videoTemplaterFrontApp",["ngAnimate","ngCookies","ngResource","ngRoute","ngSanitize","ngTouch","ngMaterial","ngFileSaver","com.2fdevs.videogular","com.2fdevs.videogular.plugins.controls","ngFileUpload","ngSanitize","cfp.hotkeys"]).config(["$routeProvider",function(a){a.when("/",{templateUrl:"views/main.html",controller:"MainCtrl",controllerAs:"main"}).when("/about",{templateUrl:"views/about.html",controller:"AboutCtrl",controllerAs:"about"}).when("/subtitles",{templateUrl:"views/subtitles.html",controller:"SubtitlesCtrl",controllerAs:"subtitles"}).otherwise({redirectTo:"/"})}]).config(["hotkeysProvider",function(a){a.useNgRoute=!1}]),angular.module("videoTemplaterFrontApp").controller("MainCtrl",["$scope","$http",function(a,b){this.template=1,this.form="";var c=this,d=function(){c.form=""};this.templates=[{id:1,name:"Titel + 2 tekstblokken"},{id:2,name:"Titel + 3 tekstblokken"},{id:3,name:"Titel + 4 tekstblokken"}],this.sendToDropbox=function(){b({method:"GET",url:"https://www.dropbox.com/1/oauth2/authorize",params:{client_id:"8yl1lr43umhtf6r",redirect_uri:"http://localhost:9000",require_role:"work",response_type:"token"}}).success(function(a){console.log(a)}).error(function(a){console.log(a)})},this.sendToZapier=function(a){console.log(a);var c,e,f,g,h,i,j;switch(a.template){case 1:j="C:\\Users\\chiafis\\Dropbox (Vrt Startup)\\Vrt Startup Team Folder\\NieuwsHub\\Lab\\01_templater\\win_ae\\Template_Text_02.aep";break;case 2:j="C:\\Users\\chiafis\\Dropbox (Vrt Startup)\\Vrt Startup Team Folder\\NieuwsHub\\Lab\\01_templater\\win_ae\\Template_Text_03.aep";break;case 3:j="C:\\Users\\chiafis\\Dropbox (Vrt Startup)\\Vrt Startup Team Folder\\NieuwsHub\\Lab\\01_templater\\win_ae\\Template_Text_04.aep";break;default:j="C:\\Users\\chiafis\\Dropbox (Vrt Startup)\\Vrt Startup Team Folder\\NieuwsHub\\Lab\\01_templater\\win_ae\\Template_Text_02.aep"}a.title&&(c=a.title.toUpperCase()),a.filename&&(e=a.filename.toUpperCase()),a.textOne&&(f=a.textOne.toUpperCase()),a.textTwo&&(g=a.textTwo.toUpperCase()),a.textThree&&(h=a.textThree.toUpperCase()),a.textFour&&(i=a.textFour.toUpperCase()),b({method:"GET",url:"https://zapier.com/hooks/catch/2mep75/",params:{"render-status":"ready",target:"Export Composition",template:j,title:c,filename:e+"_ae",textOne:f,textTwo:g,textThree:h,textFour:i}}).then(function(a){console.log(a),console.log(j),d()},function(a){console.log(a)})},this.awesomeThings=["HTML5 Boilerplate","AngularJS","Karma"]}]),angular.module("videoTemplaterFrontApp").controller("AboutCtrl",function(){this.awesomeThings=["HTML5 Boilerplate","AngularJS","Karma"]}),angular.module("videoTemplaterFrontApp").controller("SubtitlesCtrl",["$scope","srt","FileSaver","Blob","Upload","$timeout","$sce","hotkeys",function(a,b,c,d,e,f,g,h){a.srtObj=[],a.form={start:"1",end:"10",text:"test text"};var i=function(a){return b.stringify(a)};a.download=function(a){console.log(a),b=i(a);var e=new d([b],{type:"srt"});c.saveAs(e,"sub.srt")},a.addLine=function(b){var c=Object.keys(a.srtObj).length++;a.srtObj[c]={id:c,start:b.start,end:b.end,text:b.text},console.log(a.srtObj)},a.videogular={sources:[{src:"videos/test.mp4",type:"video/mp4"}],theme:"bower_components/videogular-themes-default/videogular.css",plugins:{poster:"http://www.videogular.com/assets/images/videogular.png"}},a.onPlayerReady=function(b){a.API=b,console.log(a.API)};var j=function(){return a.API.currentTime},k=function(b){a.form.start=b/1e3},l=function(b){a.form.end=b/1e3};h.add({combo:"ctrl+i",description:"getInTime",callback:function(){k(j())}}),h.add({combo:"ctrl+o",description:"getOutTime",callback:function(){l(j())}})}]),angular.module("videoTemplaterFrontApp").service("srt",function(){var a;return a={},a.parse=function(b){var c,d,e,f,g,h,i,j,k;for(h=[],b=b.replace(/\r\n|\r|\n/g,"\n"),b=b.replace(/\n{3,}/g,"\n\n"),b=b.replace(/^\s+|\s+$/g,""),f=b.split("\n\n"),d=j=0,k=f.length;k>j;d=++j)c=f[d],e={},g=c.split("\n"),g.length>3&&(g[2]=g.slice(2).join("\n")),3===g.length&&(e.id=parseInt(g[0])-1,i=g[1].split(" --> "),e.start=a.toSeconds(i[0]),e.end=a.toSeconds(i[1]),e.text=g[2],h.push(e));return h},a.toSeconds=function(a){var b,c,d;if(d=0,a)for(b=a.split(":"),c=0;c<b.length;)d=60*d+parseFloat(b[c].replace(",",".")),c++;return d},a.toTimestamp=function(a){var b,c,d,e;return b=Math.floor(a/3600),c=Math.floor((a-3600*b)/60),e=a-3600*b-60*c,10>b&&(b="0"+b),10>c&&(c="0"+c),d=e.toFixed(3).replace(".",",").replace(",000",""),10>e&&(d="0"+d),b+":"+c+":"+d},a.stringify=function(b){var c,d,e,f,g;for(e="",d=f=0,g=b.length;g>f;d=++f)c=b[d],console.log(c),e+=d+1+"\n",e+=a.toTimestamp(c.start)+" --> "+a.toTimestamp(c.end)+"\n",e+=c.text+"\n",e+="\n";return e},a}),angular.module("videoTemplaterFrontApp").run(["$templateCache",function(a){a.put("views/about.html","<p>This is the about view.</p>"),a.put("views/main.html",'<md-content layout-padding> <form name="templateForm"> <div layout="column" layout-align="center center" class="temp_form"> <md-select placeholder="Choose template" ng-model="main.template" ng-change="main.form.template = main.template"> <md-option ng-value="t.id" ng-repeat="t in main.templates">{{t.name}}</md-option> </md-select> <md-input-container> <label>Filename</label> <input name="file" ng-model="main.form.filename" required> </md-input-container> <md-input-container> <label>Title</label> <input name="title" ng-model="main.form.title" required> </md-input-container> <md-input-container> <label>Tekst lijn 1</label> <input name="textOne" ng-model="main.form.textOne" md-maxlength="70"> <div class="error" ng-if="templateForm.textOne.$invalid">Too long!</div> </md-input-container> <md-input-container> <label>Tekst lijn 2</label> <input name="textTwo" ng-model="main.form.textTwo" md-maxlength="70"> <div class="error" ng-if="templateForm.textTwo.$invalid">Too long!</div> </md-input-container> <md-input-container ng-if="main.template == 2 || main.template == 3"> <label>Tekst lijn 3</label> <input name="textThree" ng-model="main.form.textThree" md-maxlength="70"> <div class="error" ng-if="templateForm.textThree.$invalid">Too long!</div> </md-input-container> <md-input-container ng-if="main.template == 3"> <label>Tekst lijn 4</label> <input name="textFour" ng-model="main.form.textFour" md-maxlength="70"> <div class="error" ng-if="templateForm.textfour.$invalid">Too long!</div> </md-input-container> <md-button ng-click="main.sendToZapier(main.form)" class="md-raised">Send</md-button> </div> </form> </md-content>'),a.put("views/subtitles.html",'<md-content layout-padding> <form name="templateForm"> <div layout="column" layout-align="center center" class="temp_form"> <md-input-container> <label>In</label> <input name="file" ng-model="form.start" required> </md-input-container> <md-input-container> <label>Out</label> <input name="title" ng-model="form.end" required> </md-input-container> <md-input-container> <label>text</label> <input name="title" ng-model="form.text" required> </md-input-container> <md-button ng-click="addLine(form)" class="md-raised">Add Line</md-button> <md-button ng-click="download(srtObj)" class="md-raised">Download</md-button> </div> </form> <md-list> <md-list-item ng-repeat="s in srtObj"> {{s.id}} <div class="md-list-item-text" layout="row"> <input ng-model="s.start"> <input ng-model="s.end"> <textarea ng-model="s.text"></textarea> </div> </md-list-item> </md-list> <videogular vg-theme="videogular.theme" vg-player-ready="onPlayerReady($API)"> <vg-media vg-src="videogular.sources" vg-tracks="videogular.tracks"> </vg-media> <vg-controls> <vg-play-pause-button></vg-play-pause-button> <vg-time-display>{{ currentTime | date:\'mm:ss\' }}</vg-time-display> <vg-scrub-bar> <vg-scrub-bar-current-time></vg-scrub-bar-current-time> </vg-scrub-bar> <vg-time-display>{{ timeLeft | date:\'mm:ss\' }}</vg-time-display> <vg-volume> <vg-mute-button></vg-mute-button> <vg-volume-bar></vg-volume-bar> </vg-volume> <vg-fullscreen-button></vg-fullscreen-button> </vg-controls> <vg-overlay-play></vg-overlay-play> <vg-poster vg-url="videogular.plugins.poster"></vg-poster> </videogular> <form role="form" action="/" method="post" enctype="multipart/form-data"> <div class="form-group"> <label for="onixfile"></label> <input type="file" id="onixfile" name="onixfile" placeholder=""> </div> </form> <!--    <div ngf-drop ngf-select ng-model="files" class="drop-box" ngf-drag-over-class="\'dragover\'" ngf-multiple="true" ngf-allow-dir="true" accept="video/*" ngf-pattern="\'video/*\'">Drop Video or click to upload</div>\n    <div ngf-no-file-drop>File Drag/Drop is not supported for this browser</div>\n    Files:\n    <ul>\n        <li ng-repeat="f in files" style="font:smaller">{{f}}\n        {{f.name}} {{f.$error}} {{f.$errorParam}}</li>\n    </ul>\n    Upload Log:\n    <pre>{{log}}</pre> --> </md-content>')}]);